#include <stdio.h>
#include <string.h>

void printGrid(int r, int c, char grid[r][c]) {
    for (int i = 0; i < r; i++) {
        for (int j = 0; j < c; j++) {
            printf("%c", grid[i][j]);
        }
        printf("\n");
    }
}

int main() {
    int r, c;
    long long n;
    scanf("%d %d %lld", &r, &c, &n);

    char grid[r][c];
    for (int i = 0; i < r; i++) {
        scanf("%s", grid[i]);
    }

    if (n == 0 || n == 1) {
        printGrid(r, c, grid);
        return 0;
    }

    if (n % 2 == 0) {
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                printf("O");
            }
            printf("\n");
        }
        return 0;
    }

    // Now n is odd and n >= 3
    char temp_grid[r][c];
    
    for (int i = 0; i < r; i++) {
        for (int j = 0; j < c; j++) {
            temp_grid[i][j] = 'O';
        }
    }

    if ((n % 4) == 3) {
        
        char clear_map[r][c];
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                clear_map[i][j] = 'N'; // 'N' for not-cleared
            }
        }
        
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                if (grid[i][j] == 'O') {
                    clear_map[i][j] = 'C'; // 'C' for cleared
                    if (i > 0) clear_map[i - 1][j] = 'C';
                    if (i < r - 1) clear_map[i + 1][j] = 'C';
                    if (j > 0) clear_map[i][j - 1] = 'C';
                    if (j < c - 1) clear_map[i][j + 1] = 'C';
                }
            }
        }
        
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                if (clear_map[i][j] == 'C') {
                    temp_grid[i][j] = '.';
                }
            }
        }
        printGrid(r, c, temp_grid);
    } else { // n % 4 == 1 (and n >= 5)
       
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                clear_map[i][j] = 'N';
            }
        }
        
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                if (grid[i][j] == '.') {
                    
                    clear_map[i][j] = 'C';
                    if (i > 0) clear_map[i - 1][j] = 'C';
                    if (i < r - 1) clear_map[i + 1][j] = 'C';
                    if (j > 0) clear_map[i][j - 1] = 'C';
                    if (j < c - 1) clear_map[i][j + 1] = 'C';
                }
            }
        }

        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                if (clear_map[i][j] == 'C') {
                    temp_grid[i][j] = '.';
                }
            }
        }
        printGrid(r, c, temp_grid);
    }

    return 0;
}
